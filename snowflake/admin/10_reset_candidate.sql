-- Reset a specific candidate: drop/recreate schemas, re-grant, and re-create RAW VARCHAR tables
-- Run as ACCOUNTADMIN

-- Parameters (edit per run)
SET DB_NAME = 'ETL_INTERVIEW';
SET WH_NAME = 'ETL_INTERVIEW_WH';
SET CAND = 'C01';            -- e.g., C01..C10
-- Optional: set a temporary password (uncomment to use)
-- SET TEMP_PASSWORD = 'ChangeMe123!';

SET ROLE_NAME = 'ETL_' || $CAND || '_ROLE';
SET USER_NAME = 'ETL_' || $CAND;  -- login name is etl_cxx
SET RAW_SCHEMA = $CAND || '_RAW';
SET MODEL_SCHEMA = $CAND || '_MODEL';

USE WAREHOUSE IDENTIFIER($WH_NAME);
USE DATABASE IDENTIFIER($DB_NAME);

-- Drop schemas (cascade) and recreate
DROP SCHEMA IF EXISTS IDENTIFIER($DB_NAME).IDENTIFIER($MODEL_SCHEMA) CASCADE;
DROP SCHEMA IF EXISTS IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA) CASCADE;

CREATE SCHEMA IF NOT EXISTS IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA);
CREATE SCHEMA IF NOT EXISTS IDENTIFIER($DB_NAME).IDENTIFIER($MODEL_SCHEMA);

-- Re-grant usage and ownership to the candidate role
GRANT USAGE ON SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME);
GRANT USAGE ON SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($MODEL_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME);
GRANT OWNERSHIP ON SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME) REVOKE CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($MODEL_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME) REVOKE CURRENT GRANTS;

GRANT ALL PRIVILEGES ON FUTURE TABLES IN SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME);
GRANT ALL PRIVILEGES ON FUTURE TABLES IN SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($MODEL_SCHEMA) TO ROLE IDENTIFIER($ROLE_NAME);

-- Recreate RAW tables (all VARCHAR)
USE SCHEMA IDENTIFIER($DB_NAME).IDENTIFIER($RAW_SCHEMA);

CREATE OR REPLACE TABLE DIM_CUSTOMER (
  CUSTOMER_ID VARCHAR,
  NAME VARCHAR,
  SEGMENT VARCHAR,
  REGION VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE DIM_CARRIER (
  CARRIER_ID VARCHAR,
  NAME VARCHAR,
  MODE VARCHAR,
  MC_NUMBER VARCHAR,
  SCORE_TIER VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE DIM_EQUIPMENT (
  EQUIPMENT_ID VARCHAR,
  TYPE VARCHAR,
  CAPACITY_LBS VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE DIM_LOCATION (
  LOC_ID VARCHAR,
  NAME VARCHAR,
  CITY VARCHAR,
  STATE VARCHAR,
  COUNTRY VARCHAR,
  TIMEZONE VARCHAR,
  TYPE VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE DIM_LANE (
  LANE_ID VARCHAR,
  ORIGIN_LOC_ID VARCHAR,
  DEST_LOC_ID VARCHAR,
  STANDARD_MILES VARCHAR,
  STD_TRANSIT_DAYS VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE DIM_DATE (
  DATE_KEY VARCHAR,
  DATE VARCHAR,
  YEAR VARCHAR,
  QUARTER VARCHAR,
  MONTH VARCHAR,
  WEEK VARCHAR,
  DOW VARCHAR,
  IS_WEEKEND VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE FACT_SHIPMENT (
  SHIPMENT_ID VARCHAR,
  LEG_ID VARCHAR,
  CUSTOMER_ID VARCHAR,
  CARRIER_ID VARCHAR,
  EQUIPMENT_ID VARCHAR,
  ORIGIN_LOC_ID VARCHAR,
  DEST_LOC_ID VARCHAR,
  LANE_ID VARCHAR,
  TENDER_TS VARCHAR,
  PICKUP_PLAN_TS VARCHAR,
  PICKUP_ACTUAL_TS VARCHAR,
  DELIVERY_PLAN_TS VARCHAR,
  DELIVERY_ACTUAL_TS VARCHAR,
  PLANNED_MILES VARCHAR,
  ACTUAL_MILES VARCHAR,
  PIECES VARCHAR,
  WEIGHT_LBS VARCHAR,
  CUBE VARCHAR,
  REVENUE VARCHAR,
  TOTAL_COST VARCHAR,
  FUEL_SURCHARGE VARCHAR,
  ACCESSORIAL_COST VARCHAR,
  STATUS VARCHAR,
  ISDELIVEREDONTIME VARCHAR,
  ISINFULL VARCHAR,
  ISOTIF VARCHAR,
  CANCEL_FLAG VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE FACT_EVENT (
  SHIPMENT_ID VARCHAR,
  EVENT_SEQ VARCHAR,
  EVENT_TYPE VARCHAR,
  EVENT_TS VARCHAR,
  FACILITY_LOC_ID VARCHAR,
  NOTES VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

CREATE OR REPLACE TABLE FACT_COST (
  SHIPMENT_ID VARCHAR,
  COST_TYPE VARCHAR,
  CALC_METHOD VARCHAR,
  RATE_REF VARCHAR,
  COST_AMOUNT VARCHAR,
  CURRENCY VARCHAR,
  LOAD_DATE VARCHAR,
  UPDATE_DATE VARCHAR
);

-- Optional: reset password if TEMP_PASSWORD provided (commented section)
-- ALTER USER IDENTIFIER($USER_NAME) SET PASSWORD = $TEMP_PASSWORD, MUST_CHANGE_PASSWORD = TRUE;

