-- Grant read access to POWERBI_DWH for candidate roles and reviewer

SET TGT_DB = 'ETL_INTERVIEW';
SET TGT_SCHEMA = 'POWERBI_DWH';

-- Reviewer role (optional)
CREATE ROLE IF NOT EXISTS PBI_REVIEWER;
GRANT USAGE ON DATABASE IDENTIFIER($TGT_DB) TO ROLE PBI_REVIEWER;
GRANT USAGE ON SCHEMA IDENTIFIER($TGT_DB).IDENTIFIER($TGT_SCHEMA) TO ROLE PBI_REVIEWER;
GRANT SELECT ON ALL TABLES IN SCHEMA IDENTIFIER($TGT_DB).IDENTIFIER($TGT_SCHEMA) TO ROLE PBI_REVIEWER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER($TGT_DB).IDENTIFIER($TGT_SCHEMA) TO ROLE PBI_REVIEWER;

-- Grant to ETL candidate roles so the same accounts can be used by Power BI candidates
BEGIN
  LET i NUMBER := 1;
  WHILE (i <= 10) DO
    LET ci STRING := LPAD(TO_VARCHAR(i), 2, '0');
    LET cand STRING := 'C' || ci;                 -- e.g., C01
    LET role_name STRING := 'ETL_' || cand || '_ROLE';

    EXECUTE IMMEDIATE 'GRANT USAGE ON SCHEMA IDENTIFIER(''' || :TGT_DB || ''').IDENTIFIER(''' || :TGT_SCHEMA || ''') TO ROLE IDENTIFIER(''' || role_name || ''')';
    EXECUTE IMMEDIATE 'GRANT SELECT ON ALL TABLES IN SCHEMA IDENTIFIER(''' || :TGT_DB || ''').IDENTIFIER(''' || :TGT_SCHEMA || ''') TO ROLE IDENTIFIER(''' || role_name || ''')';
    EXECUTE IMMEDIATE 'GRANT SELECT ON FUTURE TABLES IN SCHEMA IDENTIFIER(''' || :TGT_DB || ''').IDENTIFIER(''' || :TGT_SCHEMA || ''') TO ROLE IDENTIFIER(''' || role_name || ''')';

    i := i + 1;
  END WHILE;
END;

